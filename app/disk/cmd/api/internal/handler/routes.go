// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	file "cloud-disk/app/disk/cmd/api/internal/handler/file"
	folder "cloud-disk/app/disk/cmd/api/internal/handler/folder"
	store "cloud-disk/app/disk/cmd/api/internal/handler/store"
	"cloud-disk/app/disk/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/certificate/upload",
				Handler: file.UploadCertificateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/certificate/download",
				Handler: file.DownloadCertificateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/certificate/callback",
				Handler: file.CallbackHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/disk/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/folder",
				Handler: folder.FoldercreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/folder/list",
				Handler: folder.FolderlistHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/folder/move",
				Handler: folder.MoveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/folder/rename",
				Handler: folder.RenameHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/disk/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/store",
				Handler: store.StoreHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/disk/v1"),
	)
}
