syntax = "v1"

info(
	title: "type title here"
	desc: "type desc here"
	author: "type author here"
	email: "type email here"
	version: "type version here"
)

@server(
	group: Share
)
service disk{
	// 分享 - 创建分享记录
	@handler ShareBasicCreate
	post /share/basic/create(ShareBasicCreateRequest) returns (ShareBasicCreateReply)
	
	// 分享 - 分享资源保存
	@handler ShareBasicSave
	post /share/basic/save(ShareBasicSaveRequest) returns (ShareBasicSaveReply)
	
}

@server(
	group: Statistics
)
service disk{
	@handler StatisticsFile
	get /file/stat(StatisticsFileRequest) returns (StatisticsFileReply)
	@handler StatisticsShare
	get /share/statistics(StatisticsShareRequest) returns (StatisticsShareReply)
}

@server(
	//	prefix: /disk
	group: File
	jwt: JwtAuth
)
service disk {
	
	// 文件上传
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadReply)
	
	// 用户- 文件关联存储
	@handler UserRepositorySave
	post /user/repository/save(UserRepositorySaveRequest) returns (UserRepositorySaveReply)
	
	// 用户 - 文件列表
	@handler UserFileList
	get /user/file/list(UserFileListRequest) returns (UserFileListReply)
	
	// 用户 - 文件重命名
	@handler UserFileNameUpdate
	post /user/file/name/update(UserFileNameUpdateRequest) returns (UserFileNameUpdateReply)
	
	// 用户 - 文件夹创建
	@handler UserFolderCreate
	post /user/folder/create(UserFolderCreateRequest) returns (UserFolderCreateReply)
	
	// 用户 - 文件删除
	@handler UserFileDelete
	delete /user/file/delete(UserFileDeleteRequest) returns (UserFileDeleteReply)
	
	// 用户 - 文件移动
	@handler UserFileMove
	put /user/file/move(UserFileMoveRequest) returns (UserFileMoveReply)
	
	// 用户 - 文件下载
	@handler FileDownload
	post /file/download(FileDownloadRequest) returns (FileDownloadReply)
	
	// 文件上传前基本信息处理
	@handler FileUploadPrepare
	post /file/upload/prepare(FileUploadPrepareRequest) returns (FileUploadPrepareReply)
	
	// 文件分片上传
	@handler FileUploadChunk
	post /file/upload/chunk(FileUploadChunkRequest) returns (FileUploadChunkReply)
	
	// 文件分片上传完成
	@handler FileUploadChunkComplete
	post /file/upload/chunk/complete(FileUploadChunkCompleteRequest) returns (FileUploadChunkCompleteReply)
}

type StatisticsFileRequest {
}
type StatisticsFileReply {
}

type StatisticsShareRequest{}
type StatisticsShareReply{}

type FileDownloadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
	Ext  string `json:"ext,optional"`
}

type FileDownloadReply {
	Data []byte `json:"data"`
}

type UserUpdateRequest {
	Name     string `json:"name,optional"`
	Avatar   string `json:"avatar,optional"`
	Password string `json:"password,optional"`
	Email    string `json:"email,optional"`
}
type UserUpdateReply {
}

type RegisterCountRequest {
}
type RegisterCountReply {
	Count int64 `json:"count"`
}

type WebsocketMessageRequest {
}
type WebsocketMessageReply {}

type FileUploadChunkCompleteRequest {
	Key        string      `json:"key"`
	UploadId   string      `json:"upload_id"`
	CosObjects []CosObject `json:"cos_objects"`
}

type CosObject {
	PartNumber int    `json:"part_number"`
	Etag       string `json:"etag"`
}

type FileUploadChunkCompleteReply {
}

type FileUploadChunkRequest { // formdata
	// key
	// upload_id
	// part_number
}

type FileUploadChunkReply {
	Etag string `json:"etag"` // MD5
}

type FileUploadPrepareRequest {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareReply {
	Identity string `json:"identity"`
	UploadId string `json:"upload_id"`
	Key      string `json:"key"`
}

type RefreshAuthorizationRequest {}

type RefreshAuthorizationReply {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"`
}

type ShareBasicSaveReply {
	Identity string `json:"identity"`
}

type ShareBasicDetailRequest {
	Identity string `json:"identity"`
}

type ShareBasicDetailReply {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
	ClickNum           int    `json:"click_num"`
}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
	Desc                   string `json:"desc"`
}

type ShareBasicCreateReply {
	Identity string `json:"identity"`
}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type UserFileMoveReply {
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteReply {
}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateReply {
	Identity string `json:"identity"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateReply {
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListReply {
	Count       int64              `json:"count"`
	List        []*UserFile        `json:"list"`
	DeletedList []*DeletedUserFile `json:"deleted_list"`
}

type PublicFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type PublicFileListReply {
	Count int64         `json:"count"`
	List  []*PublicFile `json:"list"`
}

type PublicFile {
	Id                 int64  `json:"id"`
	ParentId           int64  `json:"parent_id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Owner              string `json:"owner"`
	Name               string `json:"name"`
	Size               int64  `json:"size"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	UpdatedAt          string `json:"updated_at"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	ParentId           int64  `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Size               int64  `json:"size"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	UpdatedAt          string `json:"updated_at"`
}

type DeletedUserFile {
	Id                 int64  `json:"id"`
	ParentId           int64  `json:"parent_id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Size               int64  `json:"size"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	DeletedAt          string `json:"deleted_at"`
}

type UserRepositorySaveRequest {
	RepositoryIdentity string `json:"repositoryIdentity"`
	ParentId           int64  `json:"parentId"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveReply {
}

type PublicRepositorySaveRequest {
	RepositoryIdentity string `json:"repositoryIdentity"`
	ParentId           int64  `json:"parentId"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type PublicRepositorySaveReply {
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
	Ext  string `json:"ext,optional"`
}

type FileUploadReply {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

//need login
//@server(
////	prefix: /disk
//	group: file
//	jwt: JwtAuth
//)
//service disk {
//
//	@doc "获取上传凭证"
//	@handler upload
//	post /certificate/upload (UploadCertificateReq) returns (UploadCertificateResp)
//
//	@doc "获取下载凭证"
//	@handler download
//	post /certificate/download (DownloadCertificateReq) returns (DownloadCertificateResp)
//
//	@doc "上传回调"
//	@handler callback
//	post /certificate/callback (CallbackReq) returns (CallbackResp)
//
//	@doc "获取某类型的文件列表"
//	@handler kind
//	post /kind (KindReq) returns (KindResp)
//}

//@server(
//	group: PublicPoll
//	jwt: JwtAuth
//)
//service disk{
//	@handler PublicFileSave
//	post /public/file/save(PublicRepositorySaveRequest) returns (PublicRepositorySaveReply)
//
//}