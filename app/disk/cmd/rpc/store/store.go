// Code generated by goctl. DO NOT EDIT!
// Source: disk.proto

package store

import (
	"context"

	"cloud-disk/app/disk/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangeStoreReq  = pb.ChangeStoreReq
	ChangeStoreResp = pb.ChangeStoreResp
	StoreDetailReq  = pb.StoreDetailReq
	StoreDetailResp = pb.StoreDetailResp

	Store interface {
		// 判断是否能存入
		StoreDetail(ctx context.Context, in *StoreDetailReq, opts ...grpc.CallOption) (*StoreDetailResp, error)
		// 改变store大小
		ChangeStore(ctx context.Context, in *ChangeStoreReq, opts ...grpc.CallOption) (*ChangeStoreResp, error)
	}

	defaultStore struct {
		cli zrpc.Client
	}
)

func NewStore(cli zrpc.Client) Store {
	return &defaultStore{
		cli: cli,
	}
}

// 判断是否能存入
func (m *defaultStore) StoreDetail(ctx context.Context, in *StoreDetailReq, opts ...grpc.CallOption) (*StoreDetailResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.StoreDetail(ctx, in, opts...)
}

// 改变store大小
func (m *defaultStore) ChangeStore(ctx context.Context, in *ChangeStoreReq, opts ...grpc.CallOption) (*ChangeStoreResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.ChangeStore(ctx, in, opts...)
}
