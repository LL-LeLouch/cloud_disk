// Code generated by goctl. DO NOT EDIT!
// Source: disk.proto

package disk

import (
	"context"

	"cloud-disk/app/disk/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FileUploadPrepareRep  = pb.FileUploadPrepareRep
	FileUploadPrepareRrsp = pb.FileUploadPrepareRrsp

	Disk interface {
		FileUploadPrepare(ctx context.Context, in *FileUploadPrepareRep, opts ...grpc.CallOption) (*FileUploadPrepareRrsp, error)
	}

	defaultDisk struct {
		cli zrpc.Client
	}
)

func NewDisk(cli zrpc.Client) Disk {
	return &defaultDisk{
		cli: cli,
	}
}

func (m *defaultDisk) FileUploadPrepare(ctx context.Context, in *FileUploadPrepareRep, opts ...grpc.CallOption) (*FileUploadPrepareRrsp, error) {
	client := pb.NewDiskClient(m.cli.Conn())
	return client.FileUploadPrepare(ctx, in, opts...)
}
