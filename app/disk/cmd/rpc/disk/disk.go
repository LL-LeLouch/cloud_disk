// Code generated by goctl. DO NOT EDIT!
// Source: disk.proto

package disk

import (
	"context"

	"cloud-disk/app/disk/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangeStoreReq  = pb.ChangeStoreReq
	ChangeStoreResp = pb.ChangeStoreResp
	FileDetail      = pb.FileDetail
	FolderDetail    = pb.FolderDetail
	ListFolderReq   = pb.ListFolderReq
	ListFolderResp  = pb.ListFolderResp
	StoreDetail     = pb.StoreDetail
	StoreDetailReq  = pb.StoreDetailReq
	StoreDetailResp = pb.StoreDetailResp

	Disk interface {
		// store 详情
		DetailStore(ctx context.Context, in *StoreDetailReq, opts ...grpc.CallOption) (*StoreDetailResp, error)
		// 修改store大小
		ChangeStore(ctx context.Context, in *ChangeStoreReq, opts ...grpc.CallOption) (*ChangeStoreResp, error)
		// 获取路径下的文件和文件夹
		ListFolders(ctx context.Context, in *ListFolderReq, opts ...grpc.CallOption) (*ListFolderResp, error)
	}

	defaultDisk struct {
		cli zrpc.Client
	}
)

func NewDisk(cli zrpc.Client) Disk {
	return &defaultDisk{
		cli: cli,
	}
}

// store 详情
func (m *defaultDisk) DetailStore(ctx context.Context, in *StoreDetailReq, opts ...grpc.CallOption) (*StoreDetailResp, error) {
	client := pb.NewDiskClient(m.cli.Conn())
	return client.DetailStore(ctx, in, opts...)
}

// 修改store大小
func (m *defaultDisk) ChangeStore(ctx context.Context, in *ChangeStoreReq, opts ...grpc.CallOption) (*ChangeStoreResp, error) {
	client := pb.NewDiskClient(m.cli.Conn())
	return client.ChangeStore(ctx, in, opts...)
}

// 获取路径下的文件和文件夹
func (m *defaultDisk) ListFolders(ctx context.Context, in *ListFolderReq, opts ...grpc.CallOption) (*ListFolderResp, error) {
	client := pb.NewDiskClient(m.cli.Conn())
	return client.ListFolders(ctx, in, opts...)
}
